<?php

declare(strict_types=1);

/**
 * @class
 * @auth echo
 * @email 945462788@qq.com
 * @github https://github.com/945462788
 **/


namespace app\admin\controller;

use app\admin\service\system\MenuService;
use app\admin\service\user\RoleService;
use app\common\service\utils\ConstructorTableService;
use app\common\service\utils\TreeService;
use think\exception\ValidateException;

class Role extends Base
{
    protected function initialize():void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->service = RoleService::instance();
    }

    public function list()
    {
        if($this->request->isPost())
        {
            [$result['data'],$result['total']] = $this->service->getList();

            app('response')->success($result);
        }

        ConstructorTableService::create('角色列表')
        ->addTextCol('序号','role_id',60)
        ->addTextCol('角色标题','title',120)
        ->addTextCol('权限菜单','menu',360)
        ->addSwitchCol('启用','status',120)
        ->addTextCol('创建时间','create_time',180)
        ->setSortFields('create_time')
        ->addDefaultBlockButton()
        ->addDefaultLineButton()
        ->fetch();
    }

    public function create()
    {
        if($this->request->isPost())
        {
            $param = [];

            [$param['title'],$param['menu'],$param['status']] = param_list(['title',null],['menu',[]],['status',0]);

            if($this->service->createData('',$param))
            {
                app('response')->success('创建成功');
            }

            app('response')->fail('创建失败');
        }
        $this->fetch('form');
    }

    public function update()
    {
        $role_id = $this->request->param('role_id',0);

        $role = $this->service->findOrEmpty($role_id);

        if($role->isEmpty())
        {
            app('response')->fail('角色不存在');
        }

        if($this->request->isPost())
        {
            $param = [];

            if($role_id == 1) throw new ValidateException('系统管理员默认拥有全部菜单权限，不支持修改');

            [$param['role_id'],$param['title'],$param['menu'],$param['status']] = param_list(['role_id',0],['title',null],['menu',[]],['status',0]);

            if($this->service->updateData($role_id,'',$param))
            {
                app('response')->success('更新成功');
            }

            app('response')->fail('更新失败');
        }

        $this->assign('role',$role);

        $this->fetch('form');
    }

    public function getRoleMenuList()
    {
        $roleId = $this->request->param('role_id',null);

        $role =  $this->service->find($roleId);

        $menuService = MenuService::instance();

        $menuList = $menuService->getNavMenuList(['*'],true);

        if($role)
        {
            foreach((array) $menuList as $key =>$item)
            {
                if(in_array($item['menu_id'],explode(',',$role['menu'])))
                {
                    $menuList[$key]['checked'] = true;
                }
            }
        }

        $menuList = TreeService::instance()->init($menuList,'menu_id')->toTreeList();
        
        app('response')->success($menuList);
    }

    public function delete()
    {
        $roleId = $this->request->param('role_id',null);

        if($result = $this->service->deleteData($roleId,[1]))
        {
            app('response')->success('删除成功,条数:'.$result);
        }

        app('response')->fail('删除失败');
    }
}